"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

To compile:
cd client_libraries/java
protoc --proto_path=../../ --java_out=src/main/java ../../sparkplug_b.proto
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DataType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Unknown: _DataType.ValueType  # 0
    """Unknown placeholder for future expansion."""
    Int8: _DataType.ValueType  # 1
    """Basic Types"""
    Int16: _DataType.ValueType  # 2
    Int32: _DataType.ValueType  # 3
    Int64: _DataType.ValueType  # 4
    UInt8: _DataType.ValueType  # 5
    UInt16: _DataType.ValueType  # 6
    UInt32: _DataType.ValueType  # 7
    UInt64: _DataType.ValueType  # 8
    Float: _DataType.ValueType  # 9
    Double: _DataType.ValueType  # 10
    Boolean: _DataType.ValueType  # 11
    String: _DataType.ValueType  # 12
    DateTime: _DataType.ValueType  # 13
    Text: _DataType.ValueType  # 14
    UUID: _DataType.ValueType  # 15
    """Additional Metric Types"""
    DataSet: _DataType.ValueType  # 16
    Bytes: _DataType.ValueType  # 17
    File: _DataType.ValueType  # 18
    Template: _DataType.ValueType  # 19
    PropertySet: _DataType.ValueType  # 20
    """Additional PropertyValue Types"""
    PropertySetList: _DataType.ValueType  # 21
    Int8Array: _DataType.ValueType  # 22
    """Array Types"""
    Int16Array: _DataType.ValueType  # 23
    Int32Array: _DataType.ValueType  # 24
    Int64Array: _DataType.ValueType  # 25
    UInt8Array: _DataType.ValueType  # 26
    UInt16Array: _DataType.ValueType  # 27
    UInt32Array: _DataType.ValueType  # 28
    UInt64Array: _DataType.ValueType  # 29
    FloatArray: _DataType.ValueType  # 30
    DoubleArray: _DataType.ValueType  # 31
    BooleanArray: _DataType.ValueType  # 32
    StringArray: _DataType.ValueType  # 33
    DateTimeArray: _DataType.ValueType  # 34

class DataType(_DataType, metaclass=_DataTypeEnumTypeWrapper):
    """Indexes of Data Types"""

Unknown: DataType.ValueType  # 0
"""Unknown placeholder for future expansion."""
Int8: DataType.ValueType  # 1
"""Basic Types"""
Int16: DataType.ValueType  # 2
Int32: DataType.ValueType  # 3
Int64: DataType.ValueType  # 4
UInt8: DataType.ValueType  # 5
UInt16: DataType.ValueType  # 6
UInt32: DataType.ValueType  # 7
UInt64: DataType.ValueType  # 8
Float: DataType.ValueType  # 9
Double: DataType.ValueType  # 10
Boolean: DataType.ValueType  # 11
String: DataType.ValueType  # 12
DateTime: DataType.ValueType  # 13
Text: DataType.ValueType  # 14
UUID: DataType.ValueType  # 15
"""Additional Metric Types"""
DataSet: DataType.ValueType  # 16
Bytes: DataType.ValueType  # 17
File: DataType.ValueType  # 18
Template: DataType.ValueType  # 19
PropertySet: DataType.ValueType  # 20
"""Additional PropertyValue Types"""
PropertySetList: DataType.ValueType  # 21
Int8Array: DataType.ValueType  # 22
"""Array Types"""
Int16Array: DataType.ValueType  # 23
Int32Array: DataType.ValueType  # 24
Int64Array: DataType.ValueType  # 25
UInt8Array: DataType.ValueType  # 26
UInt16Array: DataType.ValueType  # 27
UInt32Array: DataType.ValueType  # 28
UInt64Array: DataType.ValueType  # 29
FloatArray: DataType.ValueType  # 30
DoubleArray: DataType.ValueType  # 31
BooleanArray: DataType.ValueType  # 32
StringArray: DataType.ValueType  # 33
DateTimeArray: DataType.ValueType  # 34
global___DataType = DataType

@typing.final
class Payload(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Template(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class Parameter(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            @typing.final
            class ParameterValueExtension(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                def __init__(
                    self,
                ) -> None: ...

            NAME_FIELD_NUMBER: builtins.int
            TYPE_FIELD_NUMBER: builtins.int
            INT_VALUE_FIELD_NUMBER: builtins.int
            LONG_VALUE_FIELD_NUMBER: builtins.int
            FLOAT_VALUE_FIELD_NUMBER: builtins.int
            DOUBLE_VALUE_FIELD_NUMBER: builtins.int
            BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
            STRING_VALUE_FIELD_NUMBER: builtins.int
            EXTENSION_VALUE_FIELD_NUMBER: builtins.int
            name: builtins.str
            type: builtins.int
            int_value: builtins.int
            long_value: builtins.int
            float_value: builtins.float
            double_value: builtins.float
            boolean_value: builtins.bool
            string_value: builtins.str
            @property
            def extension_value(self) -> global___Payload.Template.Parameter.ParameterValueExtension: ...
            def __init__(
                self,
                *,
                name: builtins.str | None = ...,
                type: builtins.int | None = ...,
                int_value: builtins.int | None = ...,
                long_value: builtins.int | None = ...,
                float_value: builtins.float | None = ...,
                double_value: builtins.float | None = ...,
                boolean_value: builtins.bool | None = ...,
                string_value: builtins.str | None = ...,
                extension_value: global___Payload.Template.Parameter.ParameterValueExtension | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "long_value", b"long_value", "name", b"name", "string_value", b"string_value", "type", b"type", "value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "long_value", b"long_value", "name", b"name", "string_value", b"string_value", "type", b"type", "value", b"value"]) -> None: ...
            def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["int_value", "long_value", "float_value", "double_value", "boolean_value", "string_value", "extension_value"] | None: ...

        VERSION_FIELD_NUMBER: builtins.int
        METRICS_FIELD_NUMBER: builtins.int
        PARAMETERS_FIELD_NUMBER: builtins.int
        TEMPLATE_REF_FIELD_NUMBER: builtins.int
        IS_DEFINITION_FIELD_NUMBER: builtins.int
        version: builtins.str
        """The version of the Template to prevent mismatches"""
        template_ref: builtins.str
        """MUST be a reference to a template definition if this is an instance (i.e. the name of the template definition) - MUST be omitted for template definitions"""
        is_definition: builtins.bool
        @property
        def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.Metric]:
            """Each metric includes a name, datatype, and optionally a value"""

        @property
        def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.Template.Parameter]: ...
        def __init__(
            self,
            *,
            version: builtins.str | None = ...,
            metrics: collections.abc.Iterable[global___Payload.Metric] | None = ...,
            parameters: collections.abc.Iterable[global___Payload.Template.Parameter] | None = ...,
            template_ref: builtins.str | None = ...,
            is_definition: builtins.bool | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["is_definition", b"is_definition", "template_ref", b"template_ref", "version", b"version"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["is_definition", b"is_definition", "metrics", b"metrics", "parameters", b"parameters", "template_ref", b"template_ref", "version", b"version"]) -> None: ...

    @typing.final
    class DataSet(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class DataSetValue(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            @typing.final
            class DataSetValueExtension(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                def __init__(
                    self,
                ) -> None: ...

            INT_VALUE_FIELD_NUMBER: builtins.int
            LONG_VALUE_FIELD_NUMBER: builtins.int
            FLOAT_VALUE_FIELD_NUMBER: builtins.int
            DOUBLE_VALUE_FIELD_NUMBER: builtins.int
            BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
            STRING_VALUE_FIELD_NUMBER: builtins.int
            EXTENSION_VALUE_FIELD_NUMBER: builtins.int
            int_value: builtins.int
            long_value: builtins.int
            float_value: builtins.float
            double_value: builtins.float
            boolean_value: builtins.bool
            string_value: builtins.str
            @property
            def extension_value(self) -> global___Payload.DataSet.DataSetValue.DataSetValueExtension: ...
            def __init__(
                self,
                *,
                int_value: builtins.int | None = ...,
                long_value: builtins.int | None = ...,
                float_value: builtins.float | None = ...,
                double_value: builtins.float | None = ...,
                boolean_value: builtins.bool | None = ...,
                string_value: builtins.str | None = ...,
                extension_value: global___Payload.DataSet.DataSetValue.DataSetValueExtension | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "long_value", b"long_value", "string_value", b"string_value", "value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "long_value", b"long_value", "string_value", b"string_value", "value", b"value"]) -> None: ...
            def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["int_value", "long_value", "float_value", "double_value", "boolean_value", "string_value", "extension_value"] | None: ...

        @typing.final
        class Row(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            ELEMENTS_FIELD_NUMBER: builtins.int
            @property
            def elements(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.DataSet.DataSetValue]: ...
            def __init__(
                self,
                *,
                elements: collections.abc.Iterable[global___Payload.DataSet.DataSetValue] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing.Literal["elements", b"elements"]) -> None: ...

        NUM_OF_COLUMNS_FIELD_NUMBER: builtins.int
        COLUMNS_FIELD_NUMBER: builtins.int
        TYPES_FIELD_NUMBER: builtins.int
        ROWS_FIELD_NUMBER: builtins.int
        num_of_columns: builtins.int
        @property
        def columns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        @property
        def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.DataSet.Row]: ...
        def __init__(
            self,
            *,
            num_of_columns: builtins.int | None = ...,
            columns: collections.abc.Iterable[builtins.str] | None = ...,
            types: collections.abc.Iterable[builtins.int] | None = ...,
            rows: collections.abc.Iterable[global___Payload.DataSet.Row] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["num_of_columns", b"num_of_columns"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["columns", b"columns", "num_of_columns", b"num_of_columns", "rows", b"rows", "types", b"types"]) -> None: ...

    @typing.final
    class PropertyValue(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class PropertyValueExtension(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            def __init__(
                self,
            ) -> None: ...

        TYPE_FIELD_NUMBER: builtins.int
        IS_NULL_FIELD_NUMBER: builtins.int
        INT_VALUE_FIELD_NUMBER: builtins.int
        LONG_VALUE_FIELD_NUMBER: builtins.int
        FLOAT_VALUE_FIELD_NUMBER: builtins.int
        DOUBLE_VALUE_FIELD_NUMBER: builtins.int
        BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
        STRING_VALUE_FIELD_NUMBER: builtins.int
        PROPERTYSET_VALUE_FIELD_NUMBER: builtins.int
        PROPERTYSETS_VALUE_FIELD_NUMBER: builtins.int
        EXTENSION_VALUE_FIELD_NUMBER: builtins.int
        type: builtins.int
        is_null: builtins.bool
        int_value: builtins.int
        long_value: builtins.int
        float_value: builtins.float
        double_value: builtins.float
        boolean_value: builtins.bool
        string_value: builtins.str
        @property
        def propertyset_value(self) -> global___Payload.PropertySet: ...
        @property
        def propertysets_value(self) -> global___Payload.PropertySetList:
            """List of Property Values"""

        @property
        def extension_value(self) -> global___Payload.PropertyValue.PropertyValueExtension: ...
        def __init__(
            self,
            *,
            type: builtins.int | None = ...,
            is_null: builtins.bool | None = ...,
            int_value: builtins.int | None = ...,
            long_value: builtins.int | None = ...,
            float_value: builtins.float | None = ...,
            double_value: builtins.float | None = ...,
            boolean_value: builtins.bool | None = ...,
            string_value: builtins.str | None = ...,
            propertyset_value: global___Payload.PropertySet | None = ...,
            propertysets_value: global___Payload.PropertySetList | None = ...,
            extension_value: global___Payload.PropertyValue.PropertyValueExtension | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "is_null", b"is_null", "long_value", b"long_value", "propertyset_value", b"propertyset_value", "propertysets_value", b"propertysets_value", "string_value", b"string_value", "type", b"type", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "is_null", b"is_null", "long_value", b"long_value", "propertyset_value", b"propertyset_value", "propertysets_value", b"propertysets_value", "string_value", b"string_value", "type", b"type", "value", b"value"]) -> None: ...
        def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["int_value", "long_value", "float_value", "double_value", "boolean_value", "string_value", "propertyset_value", "propertysets_value", "extension_value"] | None: ...

    @typing.final
    class PropertySet(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEYS_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        @property
        def keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Names of the properties"""

        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.PropertyValue]: ...
        def __init__(
            self,
            *,
            keys: collections.abc.Iterable[builtins.str] | None = ...,
            values: collections.abc.Iterable[global___Payload.PropertyValue] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["keys", b"keys", "values", b"values"]) -> None: ...

    @typing.final
    class PropertySetList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PROPERTYSET_FIELD_NUMBER: builtins.int
        @property
        def propertyset(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.PropertySet]: ...
        def __init__(
            self,
            *,
            propertyset: collections.abc.Iterable[global___Payload.PropertySet] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["propertyset", b"propertyset"]) -> None: ...

    @typing.final
    class MetaData(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        IS_MULTI_PART_FIELD_NUMBER: builtins.int
        CONTENT_TYPE_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        SEQ_FIELD_NUMBER: builtins.int
        FILE_NAME_FIELD_NUMBER: builtins.int
        FILE_TYPE_FIELD_NUMBER: builtins.int
        MD5_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        is_multi_part: builtins.bool
        """Bytes specific metadata"""
        content_type: builtins.str
        """General metadata
        Content/Media type
        """
        size: builtins.int
        """File size, String size, Multi-part size, etc"""
        seq: builtins.int
        """Sequence number for multi-part messages"""
        file_name: builtins.str
        """File metadata
        File name
        """
        file_type: builtins.str
        """File type (i.e. xml, json, txt, cpp, etc)"""
        md5: builtins.str
        """md5 of data"""
        description: builtins.str
        """Catchalls and future expansion
        Could be anything such as json or xml of custom properties
        """
        def __init__(
            self,
            *,
            is_multi_part: builtins.bool | None = ...,
            content_type: builtins.str | None = ...,
            size: builtins.int | None = ...,
            seq: builtins.int | None = ...,
            file_name: builtins.str | None = ...,
            file_type: builtins.str | None = ...,
            md5: builtins.str | None = ...,
            description: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["content_type", b"content_type", "description", b"description", "file_name", b"file_name", "file_type", b"file_type", "is_multi_part", b"is_multi_part", "md5", b"md5", "seq", b"seq", "size", b"size"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["content_type", b"content_type", "description", b"description", "file_name", b"file_name", "file_type", b"file_type", "is_multi_part", b"is_multi_part", "md5", b"md5", "seq", b"seq", "size", b"size"]) -> None: ...

    @typing.final
    class Metric(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class MetricValueExtension(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            def __init__(
                self,
            ) -> None: ...

        NAME_FIELD_NUMBER: builtins.int
        ALIAS_FIELD_NUMBER: builtins.int
        TIMESTAMP_FIELD_NUMBER: builtins.int
        DATATYPE_FIELD_NUMBER: builtins.int
        IS_HISTORICAL_FIELD_NUMBER: builtins.int
        IS_TRANSIENT_FIELD_NUMBER: builtins.int
        IS_NULL_FIELD_NUMBER: builtins.int
        METADATA_FIELD_NUMBER: builtins.int
        PROPERTIES_FIELD_NUMBER: builtins.int
        INT_VALUE_FIELD_NUMBER: builtins.int
        LONG_VALUE_FIELD_NUMBER: builtins.int
        FLOAT_VALUE_FIELD_NUMBER: builtins.int
        DOUBLE_VALUE_FIELD_NUMBER: builtins.int
        BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
        STRING_VALUE_FIELD_NUMBER: builtins.int
        BYTES_VALUE_FIELD_NUMBER: builtins.int
        DATASET_VALUE_FIELD_NUMBER: builtins.int
        TEMPLATE_VALUE_FIELD_NUMBER: builtins.int
        EXTENSION_VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        """Metric name - should only be included on birth"""
        alias: builtins.int
        """Metric alias - tied to name on birth and included in all later DATA messages"""
        timestamp: builtins.int
        """Timestamp associated with data acquisition time"""
        datatype: builtins.int
        """DataType of the metric/tag value"""
        is_historical: builtins.bool
        """If this is historical data and should not update real time tag"""
        is_transient: builtins.bool
        """Tells consuming clients such as MQTT Engine to not store this as a tag"""
        is_null: builtins.bool
        """If this is null - explicitly say so rather than using -1, false, etc for some datatypes."""
        int_value: builtins.int
        long_value: builtins.int
        float_value: builtins.float
        double_value: builtins.float
        boolean_value: builtins.bool
        string_value: builtins.str
        bytes_value: builtins.bytes
        """Bytes, File"""
        @property
        def metadata(self) -> global___Payload.MetaData:
            """Metadata for the payload"""

        @property
        def properties(self) -> global___Payload.PropertySet: ...
        @property
        def dataset_value(self) -> global___Payload.DataSet: ...
        @property
        def template_value(self) -> global___Payload.Template: ...
        @property
        def extension_value(self) -> global___Payload.Metric.MetricValueExtension: ...
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
            alias: builtins.int | None = ...,
            timestamp: builtins.int | None = ...,
            datatype: builtins.int | None = ...,
            is_historical: builtins.bool | None = ...,
            is_transient: builtins.bool | None = ...,
            is_null: builtins.bool | None = ...,
            metadata: global___Payload.MetaData | None = ...,
            properties: global___Payload.PropertySet | None = ...,
            int_value: builtins.int | None = ...,
            long_value: builtins.int | None = ...,
            float_value: builtins.float | None = ...,
            double_value: builtins.float | None = ...,
            boolean_value: builtins.bool | None = ...,
            string_value: builtins.str | None = ...,
            bytes_value: builtins.bytes | None = ...,
            dataset_value: global___Payload.DataSet | None = ...,
            template_value: global___Payload.Template | None = ...,
            extension_value: global___Payload.Metric.MetricValueExtension | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["alias", b"alias", "boolean_value", b"boolean_value", "bytes_value", b"bytes_value", "dataset_value", b"dataset_value", "datatype", b"datatype", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "is_historical", b"is_historical", "is_null", b"is_null", "is_transient", b"is_transient", "long_value", b"long_value", "metadata", b"metadata", "name", b"name", "properties", b"properties", "string_value", b"string_value", "template_value", b"template_value", "timestamp", b"timestamp", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["alias", b"alias", "boolean_value", b"boolean_value", "bytes_value", b"bytes_value", "dataset_value", b"dataset_value", "datatype", b"datatype", "double_value", b"double_value", "extension_value", b"extension_value", "float_value", b"float_value", "int_value", b"int_value", "is_historical", b"is_historical", "is_null", b"is_null", "is_transient", b"is_transient", "long_value", b"long_value", "metadata", b"metadata", "name", b"name", "properties", b"properties", "string_value", b"string_value", "template_value", b"template_value", "timestamp", b"timestamp", "value", b"value"]) -> None: ...
        def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["int_value", "long_value", "float_value", "double_value", "boolean_value", "string_value", "bytes_value", "dataset_value", "template_value", "extension_value"] | None: ...

    TIMESTAMP_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    SEQ_FIELD_NUMBER: builtins.int
    UUID_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    """Timestamp at message sending time"""
    seq: builtins.int
    """Sequence number"""
    uuid: builtins.str
    """UUID to track message type in terms of schema definitions"""
    body: builtins.bytes
    """To optionally bypass the whole definition above"""
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Payload.Metric]:
        """Repeated forever - no limit in Google Protobufs"""

    def __init__(
        self,
        *,
        timestamp: builtins.int | None = ...,
        metrics: collections.abc.Iterable[global___Payload.Metric] | None = ...,
        seq: builtins.int | None = ...,
        uuid: builtins.str | None = ...,
        body: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["body", b"body", "seq", b"seq", "timestamp", b"timestamp", "uuid", b"uuid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["body", b"body", "metrics", b"metrics", "seq", b"seq", "timestamp", b"timestamp", "uuid", b"uuid"]) -> None: ...

global___Payload = Payload
